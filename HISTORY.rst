..
    **功能和改进**

    **小的改进**

    **接口改变**

    **行为改变**

    **问题修复**

    **文档**

    **其他杂项**

.. :changelog:

开发日志
---------------

0.5.0 (20160225)
++++++++++++++++

- 重构 ``api_request_builder.GetLessonClasses``,
      现在可以返回课程已选人数, 课程容量, 时间地点等信息,
      同时修复了一些问题
- 添加 ``api.get_lessons_can_be_selected``,
      获取可以选上的课程教学班级
- 合并 ``api.select_lesson`` 和 ``api.delete_lesson`` 为
      ``api.change_lesson`` 并重构了逻辑
- 修改 ``api.is_lesson_selected`` 参数类型为 list,
      避免使用中重复调用导致发送大量冗余的请求
- 重构 ``parser.parse_tr_strs`` , 现在支持单个值输入输出
- 添加 ``parser.dict_list_2_tuple_set``
- 提升兼容性

0.4.2 (20160218)
++++++++++++++++

- 修复由于配置遗漏导致无法安装的问题

0.4.1 (20160217)
++++++++++++++++

- 修复一些潜在问题
- 更新文档

0.4.0 (20160216)
++++++++++++++++

- 删除缓存模块及相关接口
- 分离一般接口与请求接口, 去除了 ``g`` 对象, 只使用列表 ``all_api``
      保存注册的一般接口
- 将 ``AuthSession.catch_response`` 删除, 改用
      ``AuthSession.api_request``
- 新增了 ``model`` 模块, 包含 ``model.APIRequestBuilder``,
      ``model.APIRequest``, ``model.APIResult`` 三个类
- api 模块合并为单个文件, 添加了请求生成与响应处理的
      ``api_request_builder`` 模块
- 新的架构避免了 ``api`` 注册冗余以及 ``api`` 与 ``session``
      的交叉调用, 简化模型, 增加了灵活性, 并且不改变之前使用 session
      调用接口的方式
- 修改了 ``api.get_stu_info`` 中照片地址的生成方式

0.3.5 (20160208)
++++++++++++++++

- 修复 ``session.AuthSession`` 初始化时的逻辑错误
- 修改缓存 md5 计算方式
- 兼容 Python 3.X

0.3.4 (20151030)
++++++++++++++++

- 添加 MANIFEST.in
- 提交到了官方仓库

0.3.3 (20151030)
++++++++++++++++

- 修复 setup.py 配置中的一处错误
- 提交到了官方仓库

0.3.2 (20151030)
++++++++++++++++

- 修改持续集成通知
- 修复 anydbm 在不同环境下触发的 AttributeError: get

0.3.1 (20151030)
++++++++++++++++

- 修复接口注册前后的参数差异导致 ``cal_cache_md5``
      计算结果不正确的问题
- 添加了更多的测试用例

0.3.0 (20151029)
++++++++++++++++

- 修改 ``regist_api`` 为 ``register_api``
- 默认在安装uniout的情况下使用其输出unicode内容方便使用
- 改用元类来绑定接口, 提升声明对象时的效率
- 预定义了用户类型, ``user_type`` 参数使用预定义变量
- ``cal_gpa`` 精度改为5位小数, 与学校一致
- 添加缓存功能, 你可以通过一个全局的缓存管理对象管理缓存了,
      模块内置了 ``MemoryCache`` 和 ``FileCache``, 当然你也可以继承
      ``BaseCache`` 编写新的缓存管理对象, 模块会自动帮你注册

0.2.0 (20151025)
++++++++++++++++

- 调整了模块结构
- 分离了 ``session`` 与 接口, 通过一个统一的 ``AuthSession``
      自动绑定接口, 参数原来 ``StuLib`` 接口参数相同
- 区分了用户类型, AuthSession 即使没有登录也能访问公共接口了
- 添加了 ``regist_api`` ,
      现在你可以在不修改模块代码的情况下添加自己的接口了

0.1.3 (20150912)
++++++++++++++++

- 修复因 ``StuLib`` 初始化时未对 ``stu_id`` 进行类型转换而导致
      ``StuLib.get_stu_info`` 出错的问题

0.1.2 (20150912)
++++++++++++++++

- 修复安装时 README.md 缺失的问题

0.1.1 (20150912)
++++++++++++++++

- 添加了一些单元测试

0.1.0 (20150911)
++++++++++++++++

- 解决 ``requests`` 不能对 GBK 转 UTF8 无损转换的问题
- 添加 ``StuLib.catch_response`` , 抽象了响应的获取,
      提升了代码的可维护性

0.0.4 (20150910)
++++++++++++++++

- 修复了 ``StuLib.get_class_student``
      中由于教务网页代码严重的错误导致页面无法解析而不可用的问题
- 添加了 ``StuLib.get_class_student`` 的测试用例
- 由于 ``requests`` 返回的的网页无法做到无损转码, 将传递
      ``BeautifulSoup`` 的文档改为原始编码文档,将转码工作交给
      ``BeautifulSoup`` 处理, 但用到正则匹配的方法还存在此问题

0.0.3 (20150909)
++++++++++++++++

- 统一将返回的课程代码进行大写转换,
      避免因学校课程代码大小写的不统一产生不可预料的问题
- 重构了 ``StuLib.select_lesson`` ,
      现在支持更好地批量选课以及更好地结果处理过程
- 重构了 ``StuLib.delete_lesson`` ,
      现在支持批量删课以及更好地结果处理过程

0.0.2 (20150903)
++++++++++++++++

- 重构了 ``StuLib.select_lesson`` 的参数处理过程,
      由于第二次选课结束暂时没有完成对提交结果的处理
- 添加 Travis IC 持续集成工具

0.0.1 (20150902)
++++++++++++++++

- 修复 ``StuLib.get_class_info`` 出错
- 添加 教师信息查询（\ ``StuLib.get_teacher_info``\ ） 功能
- 将 ``StuLib.get_url`` 的 ``code`` 修改为对应的方法名称
- 修复 ``StuLib.change_password`` 正则匹配不完整的问题
- 修复 ``StuLib.set_telephone`` 正则匹配不完整的问题
- 添加部分单元测试
- 调整了包的结构
